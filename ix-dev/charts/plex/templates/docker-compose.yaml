{% set plex_container_name = "plex" %}
{% set plex_image = "plexinc/pms-docker:1.40.2.8395-c67dce28e" %}
{% set plex_pass_image = "plexinc/pms-docker:plexpass" %}
{% set plex_images = {
  "plex": plex_image,
  "plexpass": plex_pass_image
} %}
{# TODO: volumes, ports, more test values #}
{# Containers #}
services:
  {{ plex_container_name }}:
    user: "0:0"
    image: {{ plex_images[plex.image] }}
    deploy:
      resources: {{ ix_lib.base.resources.resources(resources) | tojson }}
    {% if network.host_network %}
    network_mode: host
    {% endif %}
    {% set caps = ix_lib.base.security.get_caps(add=["CHOWN", "DAC_OVERRIDE", "FOWNER", "SETGID", "SETUID", "KILL"]) %}
    cap_add: {{ caps.cap_add | tojson }}
    cap_drop: {{ caps.cap_drop | tojson }}
    security_opt: {{ ix_lib.base.security.get_sec_opts() | tojson }}
    {% set test = "/healthcheck.sh" %}
    healthcheck: {{ ix_lib.base.healthchecks.check_health(test) | tojson }}
    environment: {{ ix_lib.base.environment.envs(app={
      "TZ": TZ,
      "PLEX_UID": run_as.user,
      "PLEX_GID": run_as.group,
      "PLEX_CLAIM": plex.claim,
    }, user=plex.additional_envs) | tojson }}
    {% if not network.host_network %}
    ports:
      - {{ ix_lib.base.ports.get_port(port={"target": 32400, "published": network.web_port}) | tojson }}
    {% endif %}
