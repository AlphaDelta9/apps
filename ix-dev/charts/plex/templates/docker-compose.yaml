{% set plex_container_name = "plex" %}
{% set plex_image = "plexinc/pms-docker:1.40.2.8395-c67dce28e" %}
{% set plex_pass_image = "plexinc/pms-docker:plexpass" %}
{% set plex_images = {
  "plex": plex_image,
  "plexpass": plex_pass_image
} %}

{# Containers #}
services:
  {{ plex_container_name }}:
    user: "0:0"
    image: {{ plex_images[plex.image] }}
    deploy:
      resources: {{ ix_lib.base.resources.resources(resources) | tojson }}
    {% if network.host_network %}
    network_mode: host
    {% endif %}
    {% set caps = ix_lib.base.security.get_caps(add=["CHOWN", "DAC_OVERRIDE", "FOWNER", "SETGID", "SETUID", "KILL"]) %}
    cap_add: {{ caps.add | tojson }}
    cap_drop: {{ caps.drop | tojson }}
    security_opt: {{ ix_lib.base.security.get_sec_opts() | tojson }}
    {% set test = "/healthcheck.sh" %}
    healthcheck: {{ ix_lib.base.healthchecks.check_health(test) | tojson }}
    environment: {{ ix_lib.base.environment.envs(app={
      "TZ": TZ,
      "PLEX_UID": run_as.user,
      "PLEX_GID": run_as.group,
      "PLEX_CLAIM": plex.claim,
    }, user=plex.additional_envs) | tojson }}
    {% if not network.host_network %}
    ports:
      - {{ ix_lib.base.ports.get_port(port={"target": 32400, "published": network.web_port}) | tojson }}
    {% endif %}
    volumes:
      - {{ ix_lib.base.storage.vol_mount(data=dict(storage.data, **{"mount_path": "/data"}), ix_volumes=ixVolumes) | tojson }}
      - {{ ix_lib.base.storage.vol_mount(data=dict(storage.config, **{"mount_path": "/config"}), ix_volumes=ixVolumes) | tojson }}
      - {{ ix_lib.base.storage.vol_mount(data=dict(storage.logs, **{"mount_path": "/config/Library/Application Support/Plex Media Server/Logs"}), ix_volumes=ixVolumes) | tojson }}
      - {{ ix_lib.base.storage.vol_mount(data=dict(storage.transcode, **{"mount_path": "/transcode"}), ix_volumes=ixVolumes) | tojson }}
      {% for store in storage.additional_storage %}
      - {{ ix_lib.base.storage.vol_mount(data=store, ix_volumes=ixVolumes) | tojson }}
      {% endfor %}

{% set volumes = namespace(items={}) %}
{% if ix_lib.base.storage.vol(data=storage.data) and volumes.items.update(ix_lib.base.storage.vol(data=storage.data)) %}{% endif %}
{% if ix_lib.base.storage.vol(data=storage.config) and volumes.items.update(ix_lib.base.storage.vol(data=storage.config)) %}{% endif %}
{% if ix_lib.base.storage.vol(data=storage.logs) and volumes.items.update(ix_lib.base.storage.vol(data=storage.logs)) %}{% endif %}
{% if ix_lib.base.storage.vol(data=storage.transcode) and volumes.items.update(ix_lib.base.storage.vol(data=storage.transcode)) %}{% endif %}
{% for store in storage.additional_storage %}
  {% if ix_lib.base.storage.vol(data=store) and volumes.items.update(ix_lib.base.storage.vol(data=store)) %}{% endif %}
{% endfor %}

{% if volumes.items %}
volumes: {{ volumes.items | tojson }}
{% endif %}
